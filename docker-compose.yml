services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: taskpilot-backend
    container_name: taskpilot-backend
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./backend:/var/www
    depends_on:
      - db
    networks:
      - taskpilot_network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    image: taskpilot-frontend
    container_name: taskpilot-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/taskpilot:/app
      - /app/node_modules  
    working_dir: /app
    command: ["npm", "run", "dev"]
    depends_on:
      - backend
    networks:
      - taskpilot_network

  nginx:
    image: nginx:stable
    container_name: taskpilot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/taskpilot/dist:/usr/share/nginx/html
      - ./backend:/var/www
    depends_on:
      - backend
      - frontend
    networks:
      - taskpilot_network

  db:
    image: mysql:8
    container_name: taskpilot-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: taskpilot
      MYSQL_USER: taskpilot
      MYSQL_PASSWORD: taskpilot
    ports:
      - 3306:3306
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - taskpilot_network

volumes:
  dbdata:
    driver: local

networks:
  taskpilot_network:
    driver: bridge
